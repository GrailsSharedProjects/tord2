{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001uploader\u0001 in\u0001your entire workspace\u0001 (Found 117 matches in 9 files)\n\n/grails-app/assets/javascripts/imagebed.js:\n\t170: \t\t\t\t\tinitUploader();\n\t226:         jQuery('.uploader .uploaderIconLoading').height(0);\n\t227:         jQuery('.uploader .uploaderProcess').text('');\n\t231:         jQuery('.uploader .uploaderIconLoading').height(p);\n\t232:         jQuery('.uploader .uploaderProcess').text('文件已上传'+p);\n\t237:     var uploadUrl = '/uploader/upload';\n\t272:     \t\tjQuery(\".upload-widget .uploaderImage\").html(\"<img src=\\\"\"+relPath+\"\\\" data-id=\\\"\"+relPath.split(\"?id=\")[1]+\"\\\" class=\\\"checked\\\" />\");\n\t281: function initUploader(){\n\t282: \tjQuery('.uploader .uploaderInput').on('change', function (e) {\n\t286: \tjQuery('.uploader .uploaderDrag').on('click', function (e) {\n\t289: \t    jQuery('.uploader .uploaderInput').trigger('click');\n\t291: \tjQuery('.uploader .uploaderDrag').on('dragenter', function(e) {\n\t295: \tjQuery('.uploader .uploaderDrag').on('dragover', function(e) {\n\t299: \tjQuery('.uploader .uploaderDrag').on('drop', function(e) {\n\n/grails-app/assets/simditor/sim.js:\n\t5: //= require scripts/uploader.js\n\n/grails-app/assets/simditor/scripts/simditor.js:\n\t9:     define('simditor', [\"jquery\",\"simple-module\",\"simple-hotkeys\",\"simple-uploader\"], function ($, SimpleModule, simpleHotkeys, simpleUploader) {\n\t10:       return (root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader));\n\t16:     module.exports = factory(require(\"jquery\"),require(\"simple-module\"),require(\"simple-hotkeys\"),require(\"simple-uploader\"));\n\t18:     root['Simditor'] = factory(jQuery,SimpleModule,simple.hotkeys,simple.uploader);\n\t20: }(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {\n\t866:         if ((ref = this.editor.uploader) != null) {\n\t918:                 if ((ref2 = _this.editor.uploader) != null) {\n\t2273:     if (this.opts.upload && simpleUploader) {\n\t2275:       this.uploader = simpleUploader(uploadOpts);\n\t2459:     'uploadError': '上传出错了',\n\t3958:       if (this.editor.uploader != null) {\n\t4023:                 _this.editor.uploader.cancel(file);\n\t4025:                   return _this.editor.uploader.trigger('uploadready', [file]);\n\t4044:       return this._initUploader(this.el);\n\t4050:     return this._initUploader();\n\t4053:   ImageButton.prototype._initUploader = function($uploadItem) {\n\t4058:     if (this.editor.uploader == null) {\n\t4080:           _this.editor.uploader.upload($input, {\n\t4086:             _this.editor.uploader.upload($input, {\n\t4096:     this.editor.uploader.on('beforeupload', (function(_this) {\n\t4110:         return _this.editor.uploader.readImageFile(file.obj, function(img) {\n\t4125:     this.editor.uploader.on('uploadprogress', $.proxy(this.editor.util.throttle(function(e, file, loaded, total) {\n\t4146:     this.editor.uploader.on('uploadsuccess', (function(_this) {\n\t4186:           return _this.editor.uploader.trigger('uploadready', [file, result]);\n\t4190:     return this.editor.uploader.on('uploaderror', (function(_this) {\n\t4205:             msg = _this._t('uploadError');\n\t4227:           return _this.editor.uploader.trigger('uploadready', [file, result]);\n\t4445:     return this._initUploader();\n\t4448:   ImagePopover.prototype._initUploader = function() {\n\t4451:     if (this.editor.uploader == null) {\n\t4471:         _this.editor.uploader.upload(_this.input, {\n\t4518:     if (/^data:image/.test(src) && !this.editor.uploader) {\n\t4540:           _this.editor.uploader.upload(blob, {\n\n/grails-app/assets/simditor/scripts/uploader.js:\n\t4:     define('simple-uploader', [\"jquery\",\"simple-module\"], function ($, SimpleModule) {\n\t5:       return (root['uploader'] = factory($, SimpleModule));\n\t14:     root.simple['uploader'] = factory(jQuery,SimpleModule);\n\t18: var Uploader, uploader,\n\t22: Uploader = (function(superClass) {\n\t23:   extend(Uploader, superClass);\n\t25:   function Uploader() {\n\t26:     return Uploader.__super__.constructor.apply(this, arguments);\n\t29:   Uploader.count = 0;\n\t31:   Uploader.prototype.opts = {\n\t38:   Uploader.prototype._init = function() {\n\t41:     this.id = ++Uploader.count;\n\t52:     return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n\t63:   Uploader.prototype.generateId = (function() {\n\t71:   Uploader.prototype.upload = function(file, opts) {\n\t109:   Uploader.prototype.getFile = function(fileObj) {\n\t128:   Uploader.prototype._xhrUpload = function(file) {\n\t171:           return _this.trigger('uploaderror', [file, xhr, status]);\n\t189:   Uploader.prototype.cancel = function(file) {\n\t208:   Uploader.prototype.readImageFile = function(fileObj, callback) {\n\t231:   Uploader.prototype.destroy = function() {\n\t239:     $(window).off('.uploader-' + this.id);\n\t240:     return $(document).off('.uploader-' + this.id);\n\t243:   Uploader.i18n = {\n\t249:   Uploader.locale = 'zh-CN';\n\t251:   return Uploader;\n\t255: uploader = function(opts) {\n\t256:   return new Uploader(opts);\n\t259: return uploader;\n\n/grails-app/assets/stylesheets/imagebed.css:\n\t1: .uploaderDrag {\n\t12: .uploaderIcon {\n\t21: .uploaderIconLoading {\n\t40: .uploaderWrap {\n\t51: .uploaderTitle {\n\t60: .uploaderTitle strong{\n\t64: .uploaderInput {\n\t67: .uploaderImage img {\n\n/grails-app/assets/twitter-bootstrap/bootstrap-wysiwyg.js:\n\t90: \t\t\t\t\t\t\toptions.fileUploadError(\"file-reader\", e);\n\t93: \t\t\t\t\t\toptions.fileUploadError(\"unsupported-file-type\", fileInfo.type);\n\t198: \t\tfileUploadError: function (reason, detail) { console.log(\"File upload error\", reason, detail); }\n\n/grails-app/conf/Config.groovy:\n\t144: \t'/uploader/**':                ['ROLE_ADMIN'],\n\n/grails-app/views/imagebed/widget.gsp:\n\t18: \t<div class=\"tzaccordion-section uploaderSection\">\n\t24: \t\t\t<div class=\"uploader\">\n\t25: \t\t\t\t<input class=\"uploaderInput\" multiple=\"multiple\" type=\"file\"\n\t27: \t\t\t\t<div class=\"uploaderDrag\">\n\t28: \t\t\t\t\t<div class=\"uploaderTitle\">\n\t30: \t\t\t\t\t\t\tclass=\"uploaderProcess\"></strong>\n\t32: \t\t\t\t\t<div class=\"uploaderWrap\">\n\t33: \t\t\t\t\t\t<div class=\"uploaderIcon\"></div>\n\t35: \t\t\t\t\t<div class=\"uploaderWrap\">\n\t36: \t\t\t\t\t\t<div class=\"uploaderIconLoading\"></div>\n\t49: \t\t\t\t<a class=\"uploaderImage\" href=\"javascript:void(0);\"></a>\n\n/test/unit/uploader/UploaderControllerSpec.groovy:\n\t1: package uploader\n\t9: @TestFor(UploaderController)\n\t10: class UploaderControllerSpec extends Specification {\n\nFound 117 matches in 9 files \n\n","undoManager":{"mark":-2,"position":59,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001INFO_PAGE\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/grails-app/controllers/com/tord/InfoController.groovy:",""],"id":2},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t9: \t\tmodel.pageData = Page.findByName(\"INFO_PAGE\");","",""]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["Found 1 match in 1 file ",""],"id":3}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":0,"column":51},"end":{"row":0,"column":77},"action":"insert","lines":[" (Found 1 match in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["Searching for \u0001INFO_PAGE\u0001 in\u0001your entire workspace\u0001 (Found 1 match in 1 file)","","/grails-app/controllers/com/tord/InfoController.groovy:","\t9: \t\tmodel.pageData = Page.findByName(\"INFO_PAGE\");","","Found 1 match in 1 file ","",""],"id":5},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001uploader\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/grails-app/assets/javascripts/imagebed.js:",""],"id":6}],[{"start":{"row":3,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["\t70: \t\t\t\t\tvar url = \"/uploader/photo/\"+id+\"?fieldName=\"+that.fieldName+\"&editable=\" + that.options.editable + \"&sequence=\" + seq;","\t165: \t\t\t\turl:'/uploader/widget',","\t170: \t\t\t\t\tinitUploader();","\t226:         jQuery('.uploader .uploaderIconLoading').height(0);","\t227:         jQuery('.uploader .uploaderProcess').text('');","\t231:         jQuery('.uploader .uploaderIconLoading').height(p);","\t232:         jQuery('.uploader .uploaderProcess').text('文件已上传'+p);","\t237:     var uploadUrl = '/uploader/upload';","\t272:     \t\tjQuery(\".upload-widget .uploaderImage\").html(\"<img src=\\\"\"+relPath+\"\\\" data-id=\\\"\"+relPath.split(\"?id=\")[1]+\"\\\" class=\\\"checked\\\" />\");","\t281: function initUploader(){","\t282: \tjQuery('.uploader .uploaderInput').on('change', function (e) {","\t286: \tjQuery('.uploader .uploaderDrag').on('click', function (e) {","\t289: \t    jQuery('.uploader .uploaderInput').trigger('click');","\t291: \tjQuery('.uploader .uploaderDrag').on('dragenter', function(e) {","\t295: \tjQuery('.uploader .uploaderDrag').on('dragover', function(e) {","\t299: \tjQuery('.uploader .uploaderDrag').on('drop', function(e) {","",""],"id":7}],[{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["/grails-app/assets/simditor/sim.js:",""],"id":8},{"start":{"row":21,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["\t5: //= require scripts/uploader.js","",""]}],[{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["/grails-app/assets/simditor/scripts/simditor.js:",""],"id":9}],[{"start":{"row":24,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["\t9:     define('simditor', [\"jquery\",\"simple-module\",\"simple-hotkeys\",\"simple-uploader\"], function ($, SimpleModule, simpleHotkeys, simpleUploader) {","\t10:       return (root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader));","\t16:     module.exports = factory(require(\"jquery\"),require(\"simple-module\"),require(\"simple-hotkeys\"),require(\"simple-uploader\"));","\t18:     root['Simditor'] = factory(jQuery,SimpleModule,simple.hotkeys,simple.uploader);","\t20: }(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {","\t866:         if ((ref = this.editor.uploader) != null) {","\t918:                 if ((ref2 = _this.editor.uploader) != null) {","\t2273:     if (this.opts.upload && simpleUploader) {","\t2275:       this.uploader = simpleUploader(uploadOpts);","\t2459:     'uploadError': '上传出错了',","\t3958:       if (this.editor.uploader != null) {","\t4023:                 _this.editor.uploader.cancel(file);","\t4025:                   return _this.editor.uploader.trigger('uploadready', [file]);","\t4044:       return this._initUploader(this.el);","\t4050:     return this._initUploader();","\t4053:   ImageButton.prototype._initUploader = function($uploadItem) {","\t4058:     if (this.editor.uploader == null) {","\t4080:           _this.editor.uploader.upload($input, {","\t4086:             _this.editor.uploader.upload($input, {","\t4096:     this.editor.uploader.on('beforeupload', (function(_this) {","\t4110:         return _this.editor.uploader.readImageFile(file.obj, function(img) {","\t4125:     this.editor.uploader.on('uploadprogress', $.proxy(this.editor.util.throttle(function(e, file, loaded, total) {","\t4146:     this.editor.uploader.on('uploadsuccess', (function(_this) {","\t4186:           return _this.editor.uploader.trigger('uploadready', [file, result]);","\t4190:     return this.editor.uploader.on('uploaderror', (function(_this) {","\t4205:             msg = _this._t('uploadError');","\t4227:           return _this.editor.uploader.trigger('uploadready', [file, result]);","\t4445:     return this._initUploader();","\t4448:   ImagePopover.prototype._initUploader = function() {","\t4451:     if (this.editor.uploader == null) {","\t4471:         _this.editor.uploader.upload(_this.input, {","\t4518:     if (/^data:image/.test(src) && !this.editor.uploader) {","\t4540:           _this.editor.uploader.upload(blob, {","",""],"id":10},{"start":{"row":58,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["/grails-app/assets/simditor/scripts/uploader.js:",""]},{"start":{"row":59,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["\t4:     define('simple-uploader', [\"jquery\",\"simple-module\"], function ($, SimpleModule) {","\t5:       return (root['uploader'] = factory($, SimpleModule));","\t14:     root.simple['uploader'] = factory(jQuery,SimpleModule);","\t18: var Uploader, uploader,","\t22: Uploader = (function(superClass) {","\t23:   extend(Uploader, superClass);","\t25:   function Uploader() {","\t26:     return Uploader.__super__.constructor.apply(this, arguments);","\t29:   Uploader.count = 0;","\t31:   Uploader.prototype.opts = {","\t38:   Uploader.prototype._init = function() {","\t41:     this.id = ++Uploader.count;","\t52:     return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {","\t63:   Uploader.prototype.generateId = (function() {","\t71:   Uploader.prototype.upload = function(file, opts) {","\t109:   Uploader.prototype.getFile = function(fileObj) {","\t128:   Uploader.prototype._xhrUpload = function(file) {","\t171:           return _this.trigger('uploaderror', [file, xhr, status]);","\t189:   Uploader.prototype.cancel = function(file) {","\t208:   Uploader.prototype.readImageFile = function(fileObj, callback) {","\t231:   Uploader.prototype.destroy = function() {","\t239:     $(window).off('.uploader-' + this.id);","\t240:     return $(document).off('.uploader-' + this.id);","\t243:   Uploader.i18n = {","\t249:   Uploader.locale = 'zh-CN';","\t251:   return Uploader;","\t255: uploader = function(opts) {","\t256:   return new Uploader(opts);","\t259: return uploader;","",""]}],[{"start":{"row":89,"column":0},"end":{"row":90,"column":0},"action":"insert","lines":["/grails-app/assets/stylesheets/imagebed.css:",""],"id":11},{"start":{"row":90,"column":0},"end":{"row":99,"column":0},"action":"insert","lines":["\t1: .uploaderDrag {","\t12: .uploaderIcon {","\t21: .uploaderIconLoading {","\t40: .uploaderWrap {","\t51: .uploaderTitle {","\t60: .uploaderTitle strong{","\t64: .uploaderInput {","\t67: .uploaderImage img {","",""]}],[{"start":{"row":99,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["/grails-app/assets/twitter-bootstrap/bootstrap-wysiwyg.js:",""],"id":12},{"start":{"row":100,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["\t90: \t\t\t\t\t\t\toptions.fileUploadError(\"file-reader\", e);","\t93: \t\t\t\t\t\toptions.fileUploadError(\"unsupported-file-type\", fileInfo.type);","\t198: \t\tfileUploadError: function (reason, detail) { console.log(\"File upload error\", reason, detail); }","",""]}],[{"start":{"row":104,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["/grails-app/conf/Config.groovy:",""],"id":13},{"start":{"row":105,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["\t144: \t'/uploader/**':                ['ROLE_ADMIN'],","",""]}],[{"start":{"row":107,"column":0},"end":{"row":108,"column":0},"action":"insert","lines":["/grails-app/controllers/uploader/UploaderController.groovy:",""],"id":14},{"start":{"row":108,"column":0},"end":{"row":111,"column":0},"action":"insert","lines":["\t1: package uploader","\t6: class UploaderController {","",""]}],[{"start":{"row":111,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["/grails-app/domain/uploader/Msg.groovy:",""],"id":15},{"start":{"row":112,"column":0},"end":{"row":114,"column":0},"action":"insert","lines":["\t1: package uploader","",""]}],[{"start":{"row":114,"column":0},"end":{"row":115,"column":0},"action":"insert","lines":["/grails-app/views/templates/_simditor.gsp:",""],"id":16},{"start":{"row":115,"column":0},"end":{"row":117,"column":0},"action":"insert","lines":["\t7: \t\turl : '${g.createLink(controller:'uploader', action:'upload')}',","",""]}],[{"start":{"row":117,"column":0},"end":{"row":118,"column":0},"action":"insert","lines":["/grails-app/views/uploader/error.gsp:",""],"id":17},{"start":{"row":118,"column":0},"end":{"row":121,"column":0},"action":"insert","lines":["\t4: \t<meta name=\"layout\" content=\"Luploader\"/>","\t10: \t<img src=\"/uploader/upload/${imageUrl}\" />","",""]}],[{"start":{"row":121,"column":0},"end":{"row":122,"column":0},"action":"insert","lines":["/grails-app/views/uploader/index.gsp:",""],"id":18},{"start":{"row":122,"column":0},"end":{"row":124,"column":0},"action":"insert","lines":["\t4: \t<meta name=\"layout\" content=\"uploader\"/>","",""]},{"start":{"row":124,"column":0},"end":{"row":125,"column":0},"action":"insert","lines":["/grails-app/views/uploader/success.gsp:",""]}],[{"start":{"row":125,"column":0},"end":{"row":127,"column":0},"action":"insert","lines":["\t4: \t<meta name=\"layout\" content=\"Luploader\"/>","",""],"id":19}],[{"start":{"row":127,"column":0},"end":{"row":128,"column":0},"action":"insert","lines":["/grails-app/views/uploader/widget.gsp:",""],"id":20},{"start":{"row":128,"column":0},"end":{"row":140,"column":0},"action":"insert","lines":["\t18: \t<div class=\"tzaccordion-section uploaderSection\">","\t24: \t\t\t<div class=\"uploader\">","\t25: \t\t\t\t<input class=\"uploaderInput\" multiple=\"multiple\" type=\"file\"","\t27: \t\t\t\t<div class=\"uploaderDrag\">","\t28: \t\t\t\t\t<div class=\"uploaderTitle\">","\t30: \t\t\t\t\t\t\tclass=\"uploaderProcess\"></strong>","\t32: \t\t\t\t\t<div class=\"uploaderWrap\">","\t33: \t\t\t\t\t\t<div class=\"uploaderIcon\"></div>","\t35: \t\t\t\t\t<div class=\"uploaderWrap\">","\t36: \t\t\t\t\t\t<div class=\"uploaderIconLoading\"></div>","\t49: \t\t\t\t<a class=\"uploaderImage\" href=\"javascript:void(0);\"></a>","",""]}],[{"start":{"row":140,"column":0},"end":{"row":141,"column":0},"action":"insert","lines":["/src/templates/scaffolding/renderEditor.template:",""],"id":21},{"start":{"row":141,"column":0},"end":{"row":143,"column":0},"action":"insert","lines":["\t71: \t\t\t\t\t\t\turl : '\\${g.createLink(controller:'uploader', action:'upload')}',","",""]}],[{"start":{"row":143,"column":0},"end":{"row":144,"column":0},"action":"insert","lines":["/src/templates/scaffolding/show.gsp:",""],"id":22},{"start":{"row":144,"column":0},"end":{"row":146,"column":0},"action":"insert","lines":["\t67: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g:include controller=\"uploader\" action=\"photo\" id=\"\\${${propertyName}?.${p.name}?.id}\" />","",""]}],[{"start":{"row":146,"column":0},"end":{"row":147,"column":0},"action":"insert","lines":["/test/unit/uploader/MsgSpec.groovy:",""],"id":23},{"start":{"row":147,"column":0},"end":{"row":149,"column":0},"action":"insert","lines":["\t1: package uploader","",""]},{"start":{"row":149,"column":0},"end":{"row":150,"column":0},"action":"insert","lines":["/test/unit/uploader/UploaderControllerSpec.groovy:",""]},{"start":{"row":150,"column":0},"end":{"row":154,"column":0},"action":"insert","lines":["\t1: package uploader","\t9: @TestFor(UploaderController)","\t10: class UploaderControllerSpec extends Specification {","",""]},{"start":{"row":154,"column":0},"end":{"row":155,"column":0},"action":"insert","lines":["Found 130 matches in 18 files ",""]}],[{"start":{"row":155,"column":0},"end":{"row":156,"column":0},"action":"insert","lines":["",""],"id":24},{"start":{"row":0,"column":50},"end":{"row":0,"column":82},"action":"insert","lines":[" (Found 130 matches in 18 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":156,"column":0},"action":"remove","lines":["Searching for \u0001uploader\u0001 in\u0001your entire workspace\u0001 (Found 130 matches in 18 files)","","/grails-app/assets/javascripts/imagebed.js:","\t70: \t\t\t\t\tvar url = \"/uploader/photo/\"+id+\"?fieldName=\"+that.fieldName+\"&editable=\" + that.options.editable + \"&sequence=\" + seq;","\t165: \t\t\t\turl:'/uploader/widget',","\t170: \t\t\t\t\tinitUploader();","\t226:         jQuery('.uploader .uploaderIconLoading').height(0);","\t227:         jQuery('.uploader .uploaderProcess').text('');","\t231:         jQuery('.uploader .uploaderIconLoading').height(p);","\t232:         jQuery('.uploader .uploaderProcess').text('文件已上传'+p);","\t237:     var uploadUrl = '/uploader/upload';","\t272:     \t\tjQuery(\".upload-widget .uploaderImage\").html(\"<img src=\\\"\"+relPath+\"\\\" data-id=\\\"\"+relPath.split(\"?id=\")[1]+\"\\\" class=\\\"checked\\\" />\");","\t281: function initUploader(){","\t282: \tjQuery('.uploader .uploaderInput').on('change', function (e) {","\t286: \tjQuery('.uploader .uploaderDrag').on('click', function (e) {","\t289: \t    jQuery('.uploader .uploaderInput').trigger('click');","\t291: \tjQuery('.uploader .uploaderDrag').on('dragenter', function(e) {","\t295: \tjQuery('.uploader .uploaderDrag').on('dragover', function(e) {","\t299: \tjQuery('.uploader .uploaderDrag').on('drop', function(e) {","","/grails-app/assets/simditor/sim.js:","\t5: //= require scripts/uploader.js","","/grails-app/assets/simditor/scripts/simditor.js:","\t9:     define('simditor', [\"jquery\",\"simple-module\",\"simple-hotkeys\",\"simple-uploader\"], function ($, SimpleModule, simpleHotkeys, simpleUploader) {","\t10:       return (root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader));","\t16:     module.exports = factory(require(\"jquery\"),require(\"simple-module\"),require(\"simple-hotkeys\"),require(\"simple-uploader\"));","\t18:     root['Simditor'] = factory(jQuery,SimpleModule,simple.hotkeys,simple.uploader);","\t20: }(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {","\t866:         if ((ref = this.editor.uploader) != null) {","\t918:                 if ((ref2 = _this.editor.uploader) != null) {","\t2273:     if (this.opts.upload && simpleUploader) {","\t2275:       this.uploader = simpleUploader(uploadOpts);","\t2459:     'uploadError': '上传出错了',","\t3958:       if (this.editor.uploader != null) {","\t4023:                 _this.editor.uploader.cancel(file);","\t4025:                   return _this.editor.uploader.trigger('uploadready', [file]);","\t4044:       return this._initUploader(this.el);","\t4050:     return this._initUploader();","\t4053:   ImageButton.prototype._initUploader = function($uploadItem) {","\t4058:     if (this.editor.uploader == null) {","\t4080:           _this.editor.uploader.upload($input, {","\t4086:             _this.editor.uploader.upload($input, {","\t4096:     this.editor.uploader.on('beforeupload', (function(_this) {","\t4110:         return _this.editor.uploader.readImageFile(file.obj, function(img) {","\t4125:     this.editor.uploader.on('uploadprogress', $.proxy(this.editor.util.throttle(function(e, file, loaded, total) {","\t4146:     this.editor.uploader.on('uploadsuccess', (function(_this) {","\t4186:           return _this.editor.uploader.trigger('uploadready', [file, result]);","\t4190:     return this.editor.uploader.on('uploaderror', (function(_this) {","\t4205:             msg = _this._t('uploadError');","\t4227:           return _this.editor.uploader.trigger('uploadready', [file, result]);","\t4445:     return this._initUploader();","\t4448:   ImagePopover.prototype._initUploader = function() {","\t4451:     if (this.editor.uploader == null) {","\t4471:         _this.editor.uploader.upload(_this.input, {","\t4518:     if (/^data:image/.test(src) && !this.editor.uploader) {","\t4540:           _this.editor.uploader.upload(blob, {","","/grails-app/assets/simditor/scripts/uploader.js:","\t4:     define('simple-uploader', [\"jquery\",\"simple-module\"], function ($, SimpleModule) {","\t5:       return (root['uploader'] = factory($, SimpleModule));","\t14:     root.simple['uploader'] = factory(jQuery,SimpleModule);","\t18: var Uploader, uploader,","\t22: Uploader = (function(superClass) {","\t23:   extend(Uploader, superClass);","\t25:   function Uploader() {","\t26:     return Uploader.__super__.constructor.apply(this, arguments);","\t29:   Uploader.count = 0;","\t31:   Uploader.prototype.opts = {","\t38:   Uploader.prototype._init = function() {","\t41:     this.id = ++Uploader.count;","\t52:     return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {","\t63:   Uploader.prototype.generateId = (function() {","\t71:   Uploader.prototype.upload = function(file, opts) {","\t109:   Uploader.prototype.getFile = function(fileObj) {","\t128:   Uploader.prototype._xhrUpload = function(file) {","\t171:           return _this.trigger('uploaderror', [file, xhr, status]);","\t189:   Uploader.prototype.cancel = function(file) {","\t208:   Uploader.prototype.readImageFile = function(fileObj, callback) {","\t231:   Uploader.prototype.destroy = function() {","\t239:     $(window).off('.uploader-' + this.id);","\t240:     return $(document).off('.uploader-' + this.id);","\t243:   Uploader.i18n = {","\t249:   Uploader.locale = 'zh-CN';","\t251:   return Uploader;","\t255: uploader = function(opts) {","\t256:   return new Uploader(opts);","\t259: return uploader;","","/grails-app/assets/stylesheets/imagebed.css:","\t1: .uploaderDrag {","\t12: .uploaderIcon {","\t21: .uploaderIconLoading {","\t40: .uploaderWrap {","\t51: .uploaderTitle {","\t60: .uploaderTitle strong{","\t64: .uploaderInput {","\t67: .uploaderImage img {","","/grails-app/assets/twitter-bootstrap/bootstrap-wysiwyg.js:","\t90: \t\t\t\t\t\t\toptions.fileUploadError(\"file-reader\", e);","\t93: \t\t\t\t\t\toptions.fileUploadError(\"unsupported-file-type\", fileInfo.type);","\t198: \t\tfileUploadError: function (reason, detail) { console.log(\"File upload error\", reason, detail); }","","/grails-app/conf/Config.groovy:","\t144: \t'/uploader/**':                ['ROLE_ADMIN'],","","/grails-app/controllers/uploader/UploaderController.groovy:","\t1: package uploader","\t6: class UploaderController {","","/grails-app/domain/uploader/Msg.groovy:","\t1: package uploader","","/grails-app/views/templates/_simditor.gsp:","\t7: \t\turl : '${g.createLink(controller:'uploader', action:'upload')}',","","/grails-app/views/uploader/error.gsp:","\t4: \t<meta name=\"layout\" content=\"Luploader\"/>","\t10: \t<img src=\"/uploader/upload/${imageUrl}\" />","","/grails-app/views/uploader/index.gsp:","\t4: \t<meta name=\"layout\" content=\"uploader\"/>","","/grails-app/views/uploader/success.gsp:","\t4: \t<meta name=\"layout\" content=\"Luploader\"/>","","/grails-app/views/uploader/widget.gsp:","\t18: \t<div class=\"tzaccordion-section uploaderSection\">","\t24: \t\t\t<div class=\"uploader\">","\t25: \t\t\t\t<input class=\"uploaderInput\" multiple=\"multiple\" type=\"file\"","\t27: \t\t\t\t<div class=\"uploaderDrag\">","\t28: \t\t\t\t\t<div class=\"uploaderTitle\">","\t30: \t\t\t\t\t\t\tclass=\"uploaderProcess\"></strong>","\t32: \t\t\t\t\t<div class=\"uploaderWrap\">","\t33: \t\t\t\t\t\t<div class=\"uploaderIcon\"></div>","\t35: \t\t\t\t\t<div class=\"uploaderWrap\">","\t36: \t\t\t\t\t\t<div class=\"uploaderIconLoading\"></div>","\t49: \t\t\t\t<a class=\"uploaderImage\" href=\"javascript:void(0);\"></a>","","/src/templates/scaffolding/renderEditor.template:","\t71: \t\t\t\t\t\t\turl : '\\${g.createLink(controller:'uploader', action:'upload')}',","","/src/templates/scaffolding/show.gsp:","\t67: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g:include controller=\"uploader\" action=\"photo\" id=\"\\${${propertyName}?.${p.name}?.id}\" />","","/test/unit/uploader/MsgSpec.groovy:","\t1: package uploader","","/test/unit/uploader/UploaderControllerSpec.groovy:","\t1: package uploader","\t9: @TestFor(UploaderController)","\t10: class UploaderControllerSpec extends Specification {","","Found 130 matches in 18 files ","",""],"id":25},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001templates/imagebed\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy:",""],"id":26},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t56: \t\trender template:'/templates/imagebed/photo', model:[","",""]}],[{"start":{"row":5,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["/src/templates/scaffolding/Controller.groovy:","\t166: \t\trender template:'/templates/imagebed/single', model:[instanceId: ${propertyName}.id, instanceName: '${propertyName}', fieldName: fieldName, target:${propertyName}[fieldName], required: required]","\t188: \t\trender template:'/templates/imagebed/multi', model:[","",""],"id":27}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["Found 3 matches in 2 files ",""],"id":28}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":0,"column":60},"end":{"row":0,"column":89},"action":"insert","lines":[" (Found 3 matches in 2 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":11,"column":0},"action":"remove","lines":["Searching for \u0001templates/imagebed\u0001 in\u0001your entire workspace\u0001 (Found 3 matches in 2 files)","","/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy:","\t56: \t\trender template:'/templates/imagebed/photo', model:[","","/src/templates/scaffolding/Controller.groovy:","\t166: \t\trender template:'/templates/imagebed/single', model:[instanceId: ${propertyName}.id, instanceName: '${propertyName}', fieldName: fieldName, target:${propertyName}[fieldName], required: required]","\t188: \t\trender template:'/templates/imagebed/multi', model:[","","Found 3 matches in 2 files ","",""],"id":30},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001imagebed\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/grails-app/assets/common/site.css:",""],"id":31},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t7: *= require imagebed.css","",""]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/grails-app/assets/common/site.js:",""],"id":32},{"start":{"row":6,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["\t9: //= require imagebed.js","",""]}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["/grails-app/assets/javascripts/imagebed.js:",""],"id":33}],[{"start":{"row":9,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["\t4: \t\tvar Imagebed = function(element, options){","\t18: \t\tImagebed.version = '1.0.0'","\t20: \t\tImagebed.DEFAULTS = {","\t25: \t\tImagebed.prototype.drawTarget = function(){","\t70: \t\t\t\t\tvar url = \"/imagebed/photo/\"+id+\"?fieldName=\"+that.fieldName+\"&editable=\" + that.options.editable + \"&sequence=\" + seq;","\t81: \t\tImagebed.prototype.init = function(){","\t88: \t\t\t\tif(!$modal.data(\"wk.imagebed.modal\")){","\t89: \t\t\t\t\t$modal.data(\"wk.imagebed.modal\", true);","\t135: \t\tImagebed.prototype.registerTriggers = function(){","\t141: \t\t\t\tif(!$trigger.data(\"wk.imagebed.click\")){","\t147: \t\t\t\t\t$trigger.data(\"wk.imagebed.click\", true);","\t152: \t\tImagebed.prototype.show = function(fieldName, sequence){","\t160: \t\tImagebed.prototype.fill = function(){","\t165: \t\t\t\turl:'/imagebed/widget',","\t178: \t\tImagebed.prototype.hide = function(){","\t183: \t\tImagebed.prototype.clear = function(){","\t187: \t\tImagebed.prototype.uploaded = function(){","\t191: \t\t  // IMAGEBED PLUGIN DEFINITION","\t197: \t\t      var data    = $this.data('wk.imagebed')","\t198: \t\t      var options = $.extend({}, Imagebed.DEFAULTS, $this.data(), typeof option == 'object' && option)","\t200: \t\t      if (!data) $this.data('wk.imagebed', (data = new Imagebed(this, options)))","\t206: \t\t  var old = $.fn.imagebed","\t208: \t\t  $.fn.imagebed             = Plugin","\t209: \t\t  $.fn.imagebed.Constructor = Imagebed","\t212: \t\t  // IMAGEBED NO CONFLICT","\t215: \t\t  $.fn.imagebed.noConflict = function () {","\t216: \t\t    $.fn.imagebed = old","",""],"id":34}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy:",""],"id":35},{"start":{"row":38,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["\t1: package com.tord.imagebed","\t6: class ImagebedController {","",""]},{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/Widget.groovy:",""]},{"start":{"row":42,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["\t20: \t\tphoto blank: true, nullable: true, widget: 'imagebed'","",""]},{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/Work.groovy:",""]},{"start":{"row":45,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["\t33: \t\ttitlePhoto(widget: 'imagebed')","\t36: \t\tgalleryPhotoList nullable: true, blank: true, widget: 'multi-imagebed'","",""]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/admin/Slider.groovy:",""]},{"start":{"row":49,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["\t20: \t\tbgImage blank: true, nullable: true, widget: 'imagebed'","",""]},{"start":{"row":51,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["/grails-app/views/imagebed/multi.gsp:",""]},{"start":{"row":52,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["\t5: \t\tjQuery(\"select[name='${fieldName }']\").imagebed({multi: true, editable: true});","",""]},{"start":{"row":54,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["/grails-app/views/imagebed/single.gsp:",""]},{"start":{"row":55,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["\t4: \t\tjQuery(\"input[name='${fieldName }']\").imagebed({editable: true});","",""]},{"start":{"row":57,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["/grails-app/views/templates/_simditor.gsp:",""]},{"start":{"row":58,"column":0},"end":{"row":60,"column":0},"action":"insert","lines":["\t7: \t\turl : '${g.createLink(controller:'imagebed', action:'upload')}',","",""]},{"start":{"row":60,"column":0},"end":{"row":61,"column":0},"action":"insert","lines":["/src/templates/scaffolding/Controller.groovy:",""]},{"start":{"row":61,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["\t154: \tdef imagebed(){","\t155: \t\tlog.debug(\"INSIDE ${className}Controller.imagebed() ....\")","\t166: \t\trender view:'/imagebed/single', model:[instanceId: ${propertyName}.id, instanceName: '${propertyName}', fieldName: fieldName, target:${propertyName}[fieldName], required: required]","\t173: \tdef \"multi-imagebed\"(${className} ${propertyName}){","\t174: \t\tlog.debug(\"INSIDE ${className}Controller.multi-imagebed() ....\")","\t188: \t\trender view:'/imagebed/multi', model:[","",""]}],[{"start":{"row":68,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["/src/templates/scaffolding/renderEditor.template:",""],"id":36}],[{"start":{"row":69,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["\t71: \t\t\t\t\t\t\turl : '\\${g.createLink(imagebed:'uploader', action:'upload')}',","\t116:         \tif (\"imagebed\" == cp.widget) {","\t146:             if (\"multi-imagebed\" == cp.widget) {","",""],"id":37},{"start":{"row":73,"column":0},"end":{"row":78,"column":0},"action":"insert","lines":["/src/templates/scaffolding/show.gsp:","\t47: \t\t\t\t\t\t\t\t\t\t\t\t\t<% if (\"multi-imagebed\" == cp.widget) { %>","\t61: \t\t\t\t\t\t\t\t\t\t\t\t<% if (\"imagebed\" == cp.widget) { %>","\t67: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g:include controller=\"imagebed\" action=\"photo\" id=\"\\${${propertyName}?.${p.name}?.id}\" />","",""]}],[{"start":{"row":78,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["/test/unit/uploader/MsgSpec.groovy:",""],"id":38},{"start":{"row":79,"column":0},"end":{"row":81,"column":0},"action":"insert","lines":["\t1: package com.tord.imagebed","",""]},{"start":{"row":81,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["Found 53 matches in 14 files ",""]}],[{"start":{"row":82,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["",""],"id":39},{"start":{"row":0,"column":50},"end":{"row":0,"column":81},"action":"insert","lines":[" (Found 53 matches in 14 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"remove","lines":["Searching for \u0001imagebed\u0001 in\u0001your entire workspace\u0001 (Found 53 matches in 14 files)","","/grails-app/assets/common/site.css:","\t7: *= require imagebed.css","","/grails-app/assets/common/site.js:","\t9: //= require imagebed.js","","/grails-app/assets/javascripts/imagebed.js:","\t4: \t\tvar Imagebed = function(element, options){","\t18: \t\tImagebed.version = '1.0.0'","\t20: \t\tImagebed.DEFAULTS = {","\t25: \t\tImagebed.prototype.drawTarget = function(){","\t70: \t\t\t\t\tvar url = \"/imagebed/photo/\"+id+\"?fieldName=\"+that.fieldName+\"&editable=\" + that.options.editable + \"&sequence=\" + seq;","\t81: \t\tImagebed.prototype.init = function(){","\t88: \t\t\t\tif(!$modal.data(\"wk.imagebed.modal\")){","\t89: \t\t\t\t\t$modal.data(\"wk.imagebed.modal\", true);","\t135: \t\tImagebed.prototype.registerTriggers = function(){","\t141: \t\t\t\tif(!$trigger.data(\"wk.imagebed.click\")){","\t147: \t\t\t\t\t$trigger.data(\"wk.imagebed.click\", true);","\t152: \t\tImagebed.prototype.show = function(fieldName, sequence){","\t160: \t\tImagebed.prototype.fill = function(){","\t165: \t\t\t\turl:'/imagebed/widget',","\t178: \t\tImagebed.prototype.hide = function(){","\t183: \t\tImagebed.prototype.clear = function(){","\t187: \t\tImagebed.prototype.uploaded = function(){","\t191: \t\t  // IMAGEBED PLUGIN DEFINITION","\t197: \t\t      var data    = $this.data('wk.imagebed')","\t198: \t\t      var options = $.extend({}, Imagebed.DEFAULTS, $this.data(), typeof option == 'object' && option)","\t200: \t\t      if (!data) $this.data('wk.imagebed', (data = new Imagebed(this, options)))","\t206: \t\t  var old = $.fn.imagebed","\t208: \t\t  $.fn.imagebed             = Plugin","\t209: \t\t  $.fn.imagebed.Constructor = Imagebed","\t212: \t\t  // IMAGEBED NO CONFLICT","\t215: \t\t  $.fn.imagebed.noConflict = function () {","\t216: \t\t    $.fn.imagebed = old","","/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy:","\t1: package com.tord.imagebed","\t6: class ImagebedController {","","/grails-app/domain/com/tord/Widget.groovy:","\t20: \t\tphoto blank: true, nullable: true, widget: 'imagebed'","","/grails-app/domain/com/tord/Work.groovy:","\t33: \t\ttitlePhoto(widget: 'imagebed')","\t36: \t\tgalleryPhotoList nullable: true, blank: true, widget: 'multi-imagebed'","","/grails-app/domain/com/tord/admin/Slider.groovy:","\t20: \t\tbgImage blank: true, nullable: true, widget: 'imagebed'","","/grails-app/views/imagebed/multi.gsp:","\t5: \t\tjQuery(\"select[name='${fieldName }']\").imagebed({multi: true, editable: true});","","/grails-app/views/imagebed/single.gsp:","\t4: \t\tjQuery(\"input[name='${fieldName }']\").imagebed({editable: true});","","/grails-app/views/templates/_simditor.gsp:","\t7: \t\turl : '${g.createLink(controller:'imagebed', action:'upload')}',","","/src/templates/scaffolding/Controller.groovy:","\t154: \tdef imagebed(){","\t155: \t\tlog.debug(\"INSIDE ${className}Controller.imagebed() ....\")","\t166: \t\trender view:'/imagebed/single', model:[instanceId: ${propertyName}.id, instanceName: '${propertyName}', fieldName: fieldName, target:${propertyName}[fieldName], required: required]","\t173: \tdef \"multi-imagebed\"(${className} ${propertyName}){","\t174: \t\tlog.debug(\"INSIDE ${className}Controller.multi-imagebed() ....\")","\t188: \t\trender view:'/imagebed/multi', model:[","","/src/templates/scaffolding/renderEditor.template:","\t71: \t\t\t\t\t\t\turl : '\\${g.createLink(imagebed:'uploader', action:'upload')}',","\t116:         \tif (\"imagebed\" == cp.widget) {","\t146:             if (\"multi-imagebed\" == cp.widget) {","","/src/templates/scaffolding/show.gsp:","\t47: \t\t\t\t\t\t\t\t\t\t\t\t\t<% if (\"multi-imagebed\" == cp.widget) { %>","\t61: \t\t\t\t\t\t\t\t\t\t\t\t<% if (\"imagebed\" == cp.widget) { %>","\t67: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g:include controller=\"imagebed\" action=\"photo\" id=\"\\${${propertyName}?.${p.name}?.id}\" />","","/test/unit/uploader/MsgSpec.groovy:","\t1: package com.tord.imagebed","","Found 53 matches in 14 files ","",""],"id":40},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001imagebed\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/nohup.out:",""],"id":41},{"start":{"row":3,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["\t851:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t856:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t861:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","\t869: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t874: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t879: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","\t902:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t907:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t912:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","\t920: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t925: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t930: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","",""]}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["/grails-app/assets/common/site.css:",""],"id":42},{"start":{"row":17,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["\t7: *= require imagebed.css","",""]},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["/grails-app/assets/common/site.js:",""]},{"start":{"row":20,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["\t9: //= require imagebed.js","",""]},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/grails-app/assets/javascripts/imagebed.js:",""]},{"start":{"row":23,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["\t4: \t\tvar Imagebed = function(element, options){","\t18: \t\tImagebed.version = '1.0.0'","\t20: \t\tImagebed.DEFAULTS = {","\t25: \t\tImagebed.prototype.drawTarget = function(){","\t70: \t\t\t\t\tvar url = \"/imagebed/photo/\"+id+\"?fieldName=\"+that.fieldName+\"&editable=\" + that.options.editable + \"&sequence=\" + seq;","\t81: \t\tImagebed.prototype.init = function(){","\t88: \t\t\t\tif(!$modal.data(\"wk.imagebed.modal\")){","\t89: \t\t\t\t\t$modal.data(\"wk.imagebed.modal\", true);","\t135: \t\tImagebed.prototype.registerTriggers = function(){","\t141: \t\t\t\tif(!$trigger.data(\"wk.imagebed.click\")){","\t147: \t\t\t\t\t$trigger.data(\"wk.imagebed.click\", true);","\t152: \t\tImagebed.prototype.show = function(fieldName, sequence){","\t160: \t\tImagebed.prototype.fill = function(){","\t165: \t\t\t\turl:'/imagebed/widget',","\t178: \t\tImagebed.prototype.hide = function(){","\t183: \t\tImagebed.prototype.clear = function(){","\t187: \t\tImagebed.prototype.uploaded = function(){","\t191: \t\t  // IMAGEBED PLUGIN DEFINITION","\t197: \t\t      var data    = $this.data('wk.imagebed')","\t198: \t\t      var options = $.extend({}, Imagebed.DEFAULTS, $this.data(), typeof option == 'object' && option)","\t200: \t\t      if (!data) $this.data('wk.imagebed', (data = new Imagebed(this, options)))","\t206: \t\t  var old = $.fn.imagebed","\t208: \t\t  $.fn.imagebed             = Plugin","\t209: \t\t  $.fn.imagebed.Constructor = Imagebed","\t212: \t\t  // IMAGEBED NO CONFLICT","\t215: \t\t  $.fn.imagebed.noConflict = function () {","\t216: \t\t    $.fn.imagebed = old","",""]}],[{"start":{"row":51,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy:",""],"id":43},{"start":{"row":52,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["\t1: package com.tord.imagebed","\t6: class ImagebedController {","",""]},{"start":{"row":55,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/Widget.groovy:",""]},{"start":{"row":56,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["\t20: \t\tphoto blank: true, nullable: true, widget: 'imagebed'","",""]},{"start":{"row":58,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/Work.groovy:",""]},{"start":{"row":59,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["\t33: \t\ttitlePhoto(widget: 'imagebed')","\t36: \t\tgalleryPhotoList nullable: true, blank: true, widget: 'multi-imagebed'","",""]},{"start":{"row":62,"column":0},"end":{"row":63,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/admin/Slider.groovy:",""]},{"start":{"row":63,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["\t20: \t\tbgImage blank: true, nullable: true, widget: 'imagebed'","",""]}],[{"start":{"row":65,"column":0},"end":{"row":66,"column":0},"action":"insert","lines":["/grails-app/domain/com/tord/imagebed/Msg.groovy:",""],"id":44},{"start":{"row":66,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["\t1: package com.tord.imagebed","",""]},{"start":{"row":68,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["/grails-app/views/imagebed/multi.gsp:",""]},{"start":{"row":69,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["\t5: \t\tjQuery(\"select[name='${fieldName }']\").imagebed({multi: true, editable: true});","",""]}],[{"start":{"row":71,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["/grails-app/views/imagebed/single.gsp:",""],"id":45},{"start":{"row":72,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["\t4: \t\tjQuery(\"input[name='${fieldName }']\").imagebed({editable: true});","",""]},{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["/grails-app/views/templates/_simditor.gsp:",""]},{"start":{"row":75,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["\t7: \t\turl : '${g.createLink(controller:'imagebed', action:'upload')}',","",""]},{"start":{"row":77,"column":0},"end":{"row":78,"column":0},"action":"insert","lines":["/src/templates/scaffolding/Controller.groovy:",""]},{"start":{"row":78,"column":0},"end":{"row":85,"column":0},"action":"insert","lines":["\t154: \tdef imagebed(){","\t155: \t\tlog.debug(\"INSIDE ${className}Controller.imagebed() ....\")","\t166: \t\trender view:'/imagebed/single', model:[instanceId: ${propertyName}.id, instanceName: '${propertyName}', fieldName: fieldName, target:${propertyName}[fieldName], required: required]","\t173: \tdef \"multi-imagebed\"(${className} ${propertyName}){","\t174: \t\tlog.debug(\"INSIDE ${className}Controller.multi-imagebed() ....\")","\t188: \t\trender view:'/imagebed/multi', model:[","",""]},{"start":{"row":85,"column":0},"end":{"row":86,"column":0},"action":"insert","lines":["/src/templates/scaffolding/renderEditor.template:",""]},{"start":{"row":86,"column":0},"end":{"row":90,"column":0},"action":"insert","lines":["\t71: \t\t\t\t\t\t\turl : '\\${g.createLink(controller:'imagebed', action:'upload')}',","\t116:         \tif (\"imagebed\" == cp.widget) {","\t146:             if (\"multi-imagebed\" == cp.widget) {","",""]},{"start":{"row":90,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["/src/templates/scaffolding/show.gsp:",""]},{"start":{"row":91,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["\t47: \t\t\t\t\t\t\t\t\t\t\t\t\t<% if (\"multi-imagebed\" == cp.widget) { %>","\t61: \t\t\t\t\t\t\t\t\t\t\t\t<% if (\"imagebed\" == cp.widget) { %>","\t67: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g:include controller=\"imagebed\" action=\"photo\" id=\"\\${${propertyName}?.${p.name}?.id}\" />","",""]}],[{"start":{"row":95,"column":0},"end":{"row":96,"column":0},"action":"insert","lines":["/test/unit/uploader/MsgSpec.groovy:",""],"id":46},{"start":{"row":96,"column":0},"end":{"row":98,"column":0},"action":"insert","lines":["\t1: package com.tord.imagebed","",""]},{"start":{"row":98,"column":0},"end":{"row":99,"column":0},"action":"insert","lines":["Found 78 matches in 16 files ",""]},{"start":{"row":99,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":50},"end":{"row":0,"column":81},"action":"insert","lines":[" (Found 78 matches in 16 files)"]}],[{"start":{"row":100,"column":0},"end":{"row":100,"column":1},"action":"insert","lines":["u"],"id":47}],[{"start":{"row":100,"column":1},"end":{"row":100,"column":2},"action":"insert","lines":["p"],"id":48}],[{"start":{"row":100,"column":2},"end":{"row":100,"column":3},"action":"insert","lines":["l"],"id":49}],[{"start":{"row":100,"column":3},"end":{"row":100,"column":4},"action":"insert","lines":["o"],"id":50}],[{"start":{"row":100,"column":4},"end":{"row":100,"column":5},"action":"insert","lines":["a"],"id":51}],[{"start":{"row":0,"column":0},"end":{"row":100,"column":5},"action":"remove","lines":["Searching for \u0001imagebed\u0001 in\u0001your entire workspace\u0001 (Found 78 matches in 16 files)","","/nohup.out:","\t851:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t856:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t861:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","\t869: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t874: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t879: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","\t902:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t907:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t912:   [groovyc] /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","\t920: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 32: unable to resolve class Msg ","\t925: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 36: unable to resolve class Msg ","\t930: /home/tord2/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy: 39: unable to resolve class Msg ","","/grails-app/assets/common/site.css:","\t7: *= require imagebed.css","","/grails-app/assets/common/site.js:","\t9: //= require imagebed.js","","/grails-app/assets/javascripts/imagebed.js:","\t4: \t\tvar Imagebed = function(element, options){","\t18: \t\tImagebed.version = '1.0.0'","\t20: \t\tImagebed.DEFAULTS = {","\t25: \t\tImagebed.prototype.drawTarget = function(){","\t70: \t\t\t\t\tvar url = \"/imagebed/photo/\"+id+\"?fieldName=\"+that.fieldName+\"&editable=\" + that.options.editable + \"&sequence=\" + seq;","\t81: \t\tImagebed.prototype.init = function(){","\t88: \t\t\t\tif(!$modal.data(\"wk.imagebed.modal\")){","\t89: \t\t\t\t\t$modal.data(\"wk.imagebed.modal\", true);","\t135: \t\tImagebed.prototype.registerTriggers = function(){","\t141: \t\t\t\tif(!$trigger.data(\"wk.imagebed.click\")){","\t147: \t\t\t\t\t$trigger.data(\"wk.imagebed.click\", true);","\t152: \t\tImagebed.prototype.show = function(fieldName, sequence){","\t160: \t\tImagebed.prototype.fill = function(){","\t165: \t\t\t\turl:'/imagebed/widget',","\t178: \t\tImagebed.prototype.hide = function(){","\t183: \t\tImagebed.prototype.clear = function(){","\t187: \t\tImagebed.prototype.uploaded = function(){","\t191: \t\t  // IMAGEBED PLUGIN DEFINITION","\t197: \t\t      var data    = $this.data('wk.imagebed')","\t198: \t\t      var options = $.extend({}, Imagebed.DEFAULTS, $this.data(), typeof option == 'object' && option)","\t200: \t\t      if (!data) $this.data('wk.imagebed', (data = new Imagebed(this, options)))","\t206: \t\t  var old = $.fn.imagebed","\t208: \t\t  $.fn.imagebed             = Plugin","\t209: \t\t  $.fn.imagebed.Constructor = Imagebed","\t212: \t\t  // IMAGEBED NO CONFLICT","\t215: \t\t  $.fn.imagebed.noConflict = function () {","\t216: \t\t    $.fn.imagebed = old","","/grails-app/controllers/com/tord/imagebed/ImagebedController.groovy:","\t1: package com.tord.imagebed","\t6: class ImagebedController {","","/grails-app/domain/com/tord/Widget.groovy:","\t20: \t\tphoto blank: true, nullable: true, widget: 'imagebed'","","/grails-app/domain/com/tord/Work.groovy:","\t33: \t\ttitlePhoto(widget: 'imagebed')","\t36: \t\tgalleryPhotoList nullable: true, blank: true, widget: 'multi-imagebed'","","/grails-app/domain/com/tord/admin/Slider.groovy:","\t20: \t\tbgImage blank: true, nullable: true, widget: 'imagebed'","","/grails-app/domain/com/tord/imagebed/Msg.groovy:","\t1: package com.tord.imagebed","","/grails-app/views/imagebed/multi.gsp:","\t5: \t\tjQuery(\"select[name='${fieldName }']\").imagebed({multi: true, editable: true});","","/grails-app/views/imagebed/single.gsp:","\t4: \t\tjQuery(\"input[name='${fieldName }']\").imagebed({editable: true});","","/grails-app/views/templates/_simditor.gsp:","\t7: \t\turl : '${g.createLink(controller:'imagebed', action:'upload')}',","","/src/templates/scaffolding/Controller.groovy:","\t154: \tdef imagebed(){","\t155: \t\tlog.debug(\"INSIDE ${className}Controller.imagebed() ....\")","\t166: \t\trender view:'/imagebed/single', model:[instanceId: ${propertyName}.id, instanceName: '${propertyName}', fieldName: fieldName, target:${propertyName}[fieldName], required: required]","\t173: \tdef \"multi-imagebed\"(${className} ${propertyName}){","\t174: \t\tlog.debug(\"INSIDE ${className}Controller.multi-imagebed() ....\")","\t188: \t\trender view:'/imagebed/multi', model:[","","/src/templates/scaffolding/renderEditor.template:","\t71: \t\t\t\t\t\t\turl : '\\${g.createLink(controller:'imagebed', action:'upload')}',","\t116:         \tif (\"imagebed\" == cp.widget) {","\t146:             if (\"multi-imagebed\" == cp.widget) {","","/src/templates/scaffolding/show.gsp:","\t47: \t\t\t\t\t\t\t\t\t\t\t\t\t<% if (\"multi-imagebed\" == cp.widget) { %>","\t61: \t\t\t\t\t\t\t\t\t\t\t\t<% if (\"imagebed\" == cp.widget) { %>","\t67: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g:include controller=\"imagebed\" action=\"photo\" id=\"\\${${propertyName}?.${p.name}?.id}\" />","","/test/unit/uploader/MsgSpec.groovy:","\t1: package com.tord.imagebed","","Found 78 matches in 16 files ","","uploa"],"id":52},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001uploader\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/grails-app/assets/javascripts/imagebed.js:",""],"id":53},{"start":{"row":3,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["\t170: \t\t\t\t\tinitUploader();","\t226:         jQuery('.uploader .uploaderIconLoading').height(0);","\t227:         jQuery('.uploader .uploaderProcess').text('');","\t231:         jQuery('.uploader .uploaderIconLoading').height(p);","\t232:         jQuery('.uploader .uploaderProcess').text('文件已上传'+p);","\t237:     var uploadUrl = '/uploader/upload';","\t272:     \t\tjQuery(\".upload-widget .uploaderImage\").html(\"<img src=\\\"\"+relPath+\"\\\" data-id=\\\"\"+relPath.split(\"?id=\")[1]+\"\\\" class=\\\"checked\\\" />\");","\t281: function initUploader(){","\t282: \tjQuery('.uploader .uploaderInput').on('change', function (e) {","\t286: \tjQuery('.uploader .uploaderDrag').on('click', function (e) {","\t289: \t    jQuery('.uploader .uploaderInput').trigger('click');","\t291: \tjQuery('.uploader .uploaderDrag').on('dragenter', function(e) {","\t295: \tjQuery('.uploader .uploaderDrag').on('dragover', function(e) {","\t299: \tjQuery('.uploader .uploaderDrag').on('drop', function(e) {","",""]}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["/grails-app/assets/simditor/sim.js:",""],"id":54},{"start":{"row":19,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["\t5: //= require scripts/uploader.js","",""]}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["/grails-app/assets/simditor/scripts/simditor.js:",""],"id":55}],[{"start":{"row":22,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["\t9:     define('simditor', [\"jquery\",\"simple-module\",\"simple-hotkeys\",\"simple-uploader\"], function ($, SimpleModule, simpleHotkeys, simpleUploader) {","\t10:       return (root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader));","\t16:     module.exports = factory(require(\"jquery\"),require(\"simple-module\"),require(\"simple-hotkeys\"),require(\"simple-uploader\"));","\t18:     root['Simditor'] = factory(jQuery,SimpleModule,simple.hotkeys,simple.uploader);","\t20: }(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {","\t866:         if ((ref = this.editor.uploader) != null) {","\t918:                 if ((ref2 = _this.editor.uploader) != null) {","\t2273:     if (this.opts.upload && simpleUploader) {","\t2275:       this.uploader = simpleUploader(uploadOpts);","\t2459:     'uploadError': '上传出错了',","\t3958:       if (this.editor.uploader != null) {","\t4023:                 _this.editor.uploader.cancel(file);","\t4025:                   return _this.editor.uploader.trigger('uploadready', [file]);","\t4044:       return this._initUploader(this.el);","\t4050:     return this._initUploader();","\t4053:   ImageButton.prototype._initUploader = function($uploadItem) {","\t4058:     if (this.editor.uploader == null) {","\t4080:           _this.editor.uploader.upload($input, {","\t4086:             _this.editor.uploader.upload($input, {","\t4096:     this.editor.uploader.on('beforeupload', (function(_this) {","\t4110:         return _this.editor.uploader.readImageFile(file.obj, function(img) {","\t4125:     this.editor.uploader.on('uploadprogress', $.proxy(this.editor.util.throttle(function(e, file, loaded, total) {","\t4146:     this.editor.uploader.on('uploadsuccess', (function(_this) {","\t4186:           return _this.editor.uploader.trigger('uploadready', [file, result]);","\t4190:     return this.editor.uploader.on('uploaderror', (function(_this) {","\t4205:             msg = _this._t('uploadError');","\t4227:           return _this.editor.uploader.trigger('uploadready', [file, result]);","\t4445:     return this._initUploader();","\t4448:   ImagePopover.prototype._initUploader = function() {","\t4451:     if (this.editor.uploader == null) {","\t4471:         _this.editor.uploader.upload(_this.input, {","\t4518:     if (/^data:image/.test(src) && !this.editor.uploader) {","\t4540:           _this.editor.uploader.upload(blob, {","",""],"id":56},{"start":{"row":56,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["/grails-app/assets/simditor/scripts/uploader.js:",""]},{"start":{"row":57,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["\t4:     define('simple-uploader', [\"jquery\",\"simple-module\"], function ($, SimpleModule) {","\t5:       return (root['uploader'] = factory($, SimpleModule));","\t14:     root.simple['uploader'] = factory(jQuery,SimpleModule);","\t18: var Uploader, uploader,","\t22: Uploader = (function(superClass) {","\t23:   extend(Uploader, superClass);","\t25:   function Uploader() {","\t26:     return Uploader.__super__.constructor.apply(this, arguments);","\t29:   Uploader.count = 0;","\t31:   Uploader.prototype.opts = {","\t38:   Uploader.prototype._init = function() {","\t41:     this.id = ++Uploader.count;","\t52:     return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {","\t63:   Uploader.prototype.generateId = (function() {","\t71:   Uploader.prototype.upload = function(file, opts) {","\t109:   Uploader.prototype.getFile = function(fileObj) {","\t128:   Uploader.prototype._xhrUpload = function(file) {","\t171:           return _this.trigger('uploaderror', [file, xhr, status]);","\t189:   Uploader.prototype.cancel = function(file) {","\t208:   Uploader.prototype.readImageFile = function(fileObj, callback) {","\t231:   Uploader.prototype.destroy = function() {","\t239:     $(window).off('.uploader-' + this.id);","\t240:     return $(document).off('.uploader-' + this.id);","\t243:   Uploader.i18n = {","\t249:   Uploader.locale = 'zh-CN';","\t251:   return Uploader;","\t255: uploader = function(opts) {","\t256:   return new Uploader(opts);","\t259: return uploader;","",""]},{"start":{"row":87,"column":0},"end":{"row":88,"column":0},"action":"insert","lines":["/grails-app/assets/stylesheets/imagebed.css:",""]},{"start":{"row":88,"column":0},"end":{"row":97,"column":0},"action":"insert","lines":["\t1: .uploaderDrag {","\t12: .uploaderIcon {","\t21: .uploaderIconLoading {","\t40: .uploaderWrap {","\t51: .uploaderTitle {","\t60: .uploaderTitle strong{","\t64: .uploaderInput {","\t67: .uploaderImage img {","",""]},{"start":{"row":97,"column":0},"end":{"row":98,"column":0},"action":"insert","lines":["/grails-app/assets/twitter-bootstrap/bootstrap-wysiwyg.js:",""]}],[{"start":{"row":98,"column":0},"end":{"row":102,"column":0},"action":"insert","lines":["\t90: \t\t\t\t\t\t\toptions.fileUploadError(\"file-reader\", e);","\t93: \t\t\t\t\t\toptions.fileUploadError(\"unsupported-file-type\", fileInfo.type);","\t198: \t\tfileUploadError: function (reason, detail) { console.log(\"File upload error\", reason, detail); }","",""],"id":57},{"start":{"row":102,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["/grails-app/conf/Config.groovy:",""]},{"start":{"row":103,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["\t144: \t'/uploader/**':                ['ROLE_ADMIN'],","",""]},{"start":{"row":105,"column":0},"end":{"row":106,"column":0},"action":"insert","lines":["/grails-app/views/imagebed/widget.gsp:",""]},{"start":{"row":106,"column":0},"end":{"row":118,"column":0},"action":"insert","lines":["\t18: \t<div class=\"tzaccordion-section uploaderSection\">","\t24: \t\t\t<div class=\"uploader\">","\t25: \t\t\t\t<input class=\"uploaderInput\" multiple=\"multiple\" type=\"file\"","\t27: \t\t\t\t<div class=\"uploaderDrag\">","\t28: \t\t\t\t\t<div class=\"uploaderTitle\">","\t30: \t\t\t\t\t\t\tclass=\"uploaderProcess\"></strong>","\t32: \t\t\t\t\t<div class=\"uploaderWrap\">","\t33: \t\t\t\t\t\t<div class=\"uploaderIcon\"></div>","\t35: \t\t\t\t\t<div class=\"uploaderWrap\">","\t36: \t\t\t\t\t\t<div class=\"uploaderIconLoading\"></div>","\t49: \t\t\t\t<a class=\"uploaderImage\" href=\"javascript:void(0);\"></a>","",""]}],[{"start":{"row":118,"column":0},"end":{"row":119,"column":0},"action":"insert","lines":["/test/unit/uploader/UploaderControllerSpec.groovy:",""],"id":58},{"start":{"row":119,"column":0},"end":{"row":123,"column":0},"action":"insert","lines":["\t1: package uploader","\t9: @TestFor(UploaderController)","\t10: class UploaderControllerSpec extends Specification {","",""]}],[{"start":{"row":123,"column":0},"end":{"row":124,"column":0},"action":"insert","lines":["Found 117 matches in 9 files ",""],"id":59}],[{"start":{"row":124,"column":0},"end":{"row":125,"column":0},"action":"insert","lines":["",""],"id":60},{"start":{"row":0,"column":50},"end":{"row":0,"column":81},"action":"insert","lines":[" (Found 117 matches in 9 files)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":1440,"scrollleft":0,"selection":{"start":{"row":119,"column":12},"end":{"row":119,"column":20},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":101,"state":["start",{}],"mode":"ace/mode/c9search"}},"timestamp":1442496992850}